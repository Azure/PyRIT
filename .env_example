##################################
# The following are used in objects to set values by default
# And are used in notebooks.
# These values can always be overwritten in constructors.
###################################


########################
# In most of our notebook example, an `OpenAIChatTarget` is used.
# This can be initialized for Azure (by default) or OpenAI.
# The following are used to retrieve the key for either.
########################

# To get credentials for openAI
# https://help.openai.com/en/articles/4936850-where-do-i-find-my-openai-api-key
# This is used for all openAI models (including Dall-e, GPT-3, GPT-4, etc.)
# The different models can be specified in OPENAI_DEPLOYMENT or in the target constructor
OPENAI_KEY="sk-xxxxxxxxx"
OPENAI_DEPLOYMENT="default_model_name"

# To get credentials go to
# ms.portal.azure.com > Cognitive Services > Azure OpenAI > Keys and Endpoint
AZURE_OPENAI_CHAT_ENDPOINT="https://endpoint.openai.azure.com/"
AZURE_OPENAI_CHAT_KEY="<Provide Azure OpenAI key here>"
AZURE_OPENAI_CHAT_DEPLOYMENT="<Provide Azure OpenAI chat deployment name here>"

# Set optional OPENAI_CHAT_ADDITIONAL_REQUEST_HEADERS to include additional HTTP headers in a dictionary format for API requests, e.g., {'key1': 'value1'}.
# This is set for both Azure OpenAI and OpenAI endpoints
OPENAI_CHAT_ADDITIONAL_REQUEST_HEADERS="<Provide headers using a dictionary format. Ex., {'key1':'value1'}>"


##########
# Other default target credentials
##########

# To get credentials go to
# ms.portal.azure.com > Azure ML workspace > Endpoints
AZURE_ML_KEY="<Provide Azure ML API key>"
AZURE_ML_MANAGED_ENDPOINT="https://aml-endpoint.inference.ml.azure.com/score"

# Hugging Face Token
HUGGINGFACE_TOKEN = "<Provide Hugging Face token here>"

# To get credentials go to AzureOpenAI Studio -> Deployments
AZURE_DALLE_ENDPOINT = "<DALLE ENDPOINT HERE>"
AZURE_DALLE_API_KEY = "<API KEY>"
AZURE_DALLE_DEPLOYMENT = "<deployment name>"

# To get credentials go to AzureOpenAI Studio -> Deployments
AZURE_TTS_ENDPOINT = "<TTS ENDPOINT HERE>"
AZURE_TTS_KEY = "<API KEY>"
AZURE_TTS_DEPLOYMENT = "<deployment name>"

# To get keys, go to Azure Portal -> Azure Cognitive Services -> Speech -> Keys and Endpoint
AZURE_SPEECH_REGION = "<region>"
AZURE_SPEECH_KEY = "<API KEY>"

# Azure Content Safety Configuration
AZURE_CONTENT_SAFETY_API_KEY="<Provide Azure Content Safety API key here>"
AZURE_CONTENT_SAFETY_API_ENDPOINT="<Provide Azure Content Safety endpoint here>"

# Crucible API Key. You can get yours at: https://crucible.dreadnode.io/login
CRUCIBLE_API_KEY = "<Provide Crucible API key here>"


#################
# The following are used for Azure SQL memory, which can be configured in place of DuckDB
################

# Azure SQL Server
AZURE_SQL_SERVER_CONNECTION_STRING="<Provide DB Azure SQL Server connection string here>"

# Azure SQL Server Connection String and Azure Storage Account for storing blob objects
AZURE_SQL_DB_CONNECTION_STRING = "<Provide Azure SQL DB connection string here in SQLAlchemy format>"
AZURE_STORAGE_ACCOUNT_RESULTS_CONTAINER_URL="<Azure Storage Account results container url>"
AZURE_STORAGE_ACCOUNT_RESULTS_SAS_TOKEN="<Azure Storage Account Results Container SAS URL>"

# To find these values go to
# ms.portal.azure.com > Storage Account > Storage Browser > Blob containers > ... > Container Properties > URL
# ms.portal.azure.com > Storage Account > Storage Browser > Blob containers > ... > Generate SAS > Blob SAS token
AZURE_STORAGE_ACCOUNT_CONTAINER_URL="https://<storage-account-name>.blob.core.windows.net/<container-name>"
AZURE_STORAGE_ACCOUNT_SAS_TOKEN="<Provide Container SAS Token>"


##############
# The following are not used by default, but can be set here for convenience as separate AZURE_OPENAI_CHAT_DEPLOYMENT
# These can be named arbitrarily and are just suggestions people can use when initializing different deployments
##############


AZURE_SCORER_ENDPOINT="https://endpoint.openai.azure.com/"
AZURE_SCORER_CHAT_KEY="<Provide Azure OpenAI key here>"
AZURE_SCORER_DEPLOYMENT="<Provide Azure OpenAI GPT-V chat deployment name here>"

AZURE_OPENAI_GPTV_CHAT_ENDPOINT="https://endpoint.openai.azure.com/"
AZURE_OPENAI_GPTV_CHAT_KEY="<Provide Azure OpenAI key here>"
AZURE_OPENAI_GPTV_CHAT_DEPLOYMENT="<Provide Azure OpenAI GPT-V chat deployment name here>"

AZURE_OPENAI_GPT4O_CHAT_ENDPOINT="https://lion-prod-completion.openai.azure.com/"
AZURE_OPENAI_GPT4O_CHAT_KEY="<Provide Azure OpenAI key here>"
AZURE_OPENAI_GPT4O_CHAT_DEPLOYMENT="<Provide Azure OpenAI GPT4-o chat deployment name here>"

AZURE_OPENAI_GPT4_CHAT_ENDPOINT="https://lion-prod-completion.openai.azure.com/"
AZURE_OPENAI_GPT4_CHAT_KEY="<Provide Azure OpenAI key here>"
AZURE_OPENAI_GPT4_CHAT_DEPLOYMENT="<Provide Azure OpenAI GPT4-o chat deployment name here>"

AZURE_OPENAI_COMPLETION_ENDPOINT="https://completionendpoint.openai.azure.com/"
AZURE_OPENAI_COMPLETION_KEY="<Provide Azure OpenAI completion key here>"
AZURE_OPENAI_COMPLETION_DEPLOYMENT="completion_deployment_name"

AZURE_OPENAI_EMBEDDING_ENDPOINT="https://embeddingendpoint.openai.azure.com/"
AZURE_OPENAI_EMBEDDING_KEY="<Provide Azure OpenAI embedding key here>"
AZURE_OPENAI_EMBEDDING_DEPLOYMENT="<Provide Azure OpenAI embedding deployment name here>"
